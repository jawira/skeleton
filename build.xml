<?xml version="1.0" encoding="UTF-8" ?>

<project name="jawira/skeleton" default="help" phingVersion="3">

  <property name="force" value="false"/>

  <target name="phpunit" description="Install PHPUnit">
    <!-- Install with Composer -->
    <composer command="require">
      <arg value="--working-dir"/>
      <arg file="${application.startdir}"/>
      <arg value="--no-interaction"/>
      <arg value="--no-progress"/>
      <arg value="phpunit/phpunit"/>
      <arg value="--dev"/>
    </composer>
    <!-- Create files -->
    <copy file="resources/phpunit/demoTest.php" tofile="${application.startdir}/tests/demoTest.php"
          overwrite="${force}"/>
    <copy file="resources/phpunit/phpunit.xml.dist" tofile="${application.startdir}/phpunit.xml.dist"
          overwrite="${force}"/>
    <!-- Create dirs -->
    <mkdir dir=".phpunit.cache"/>
    <mkdir dir="tests"/>
    <!-- Update .gitignore -->
    <echo append="true" file="${application.startdir}/.gitignore" message="/.phpunit.cache${line.separator}"/>
    <echo append="true" file="${application.startdir}/.gitignore" message="/phpunit.xml${line.separator}"/>
    <echo append="true" file="${application.startdir}/.gitignore" message="/phpunit.result.cache${line.separator}"/>
    <echo level="warning">@todo: composer.json add 'tests' dir to 'autoload-dev'</echo>
    <!--Smoke-->
    <exec executable="vendor/bin/phpunit" passthru="true" dir="${application.startdir}">
      <arg value="--version"/>
    </exec>
    <!--Update buildfile-->
    <tempfile property="buildfile.copy"/>
    <copy file="${application.startdir}/build.xml" tofile="${buildfile.copy}"/>
    <xslt file="${buildfile.copy}" style="resources/xslt/merger.xsl" tofile="${application.startdir}/build.xml">
      <param name="buildfile.source" value="resources/phpunit/phpunit.build.xml"/>
    </xslt>
    <delete file="${buildfile.copy}"/>
  </target>

  <target name="gitignore" description="Create .gitignore">
    <copy file="resources/gitignore.txt" tofile="${application.startdir}/.gitignore" overwrite="${force}"/>
  </target>

  <target name="gitattributes" description="Create .gitattributes">
    <copy file="resources/gitattributes.txt" tofile="${application.startdir}/.gitattributes" overwrite="${force}"/>
  </target>

  <target name="editorconfig" description="Create .editorconfig">
    <copy file="resources/.editorconfig" tofile="${application.startdir}/.editorconfig" overwrite="${force}"/>
  </target>

  <target name="buildfile" description="Create Phing buildfile template">
    <copy file="resources/build.xml" tofile="${application.startdir}/build.xml" overwrite="${force}"/>
  </target>

  <target name="readme" description="Create README.md template">
    <copy file="resources/README.md" tofile="${application.startdir}/README.md" overwrite="${force}"/>
  </target>

  <target name="license" description="Create MIT license file">
    <!-- Create license file -->
    <php returnProperty="license.year" expression="date('Y')"/>
    <copy file="resources/LICENSE.md" tofile="${application.startdir}/LICENSE.md" overwrite="${force}">
      <filterchain>
        <replacetokens>
          <token key="YEAR" value="${license.year}"/>
        </replacetokens>
      </filterchain>
    </copy>
    <!--Update composer.json-->
    <composer command="config">
      <arg value="--working-dir"/>
      <arg file="${application.startdir}"/>
      <arg value="license"/>
      <arg value="MIT"/>
    </composer>
  </target>

  <target name="help">
    <uptodate property="uptodate" srcfile="build.xml" targetfile="build.png"/>
    <if>
      <not>
        <isset property="uptodate"/>
      </not>
      <then>
        <visualizer/>
      </then>
    </if>
    <exec executable="xdg-open" spawn="true">
      <arg file="build.png"/>
    </exec>
  </target>

  <target name="libre-office" description="Install target to create pdf with libre-office">
    <!--Update buildfile-->
    <tempfile property="buildfile.copy"/>
    <copy file="${application.startdir}/build.xml" tofile="${buildfile.copy}"/>
    <xslt file="${buildfile.copy}" style="resources/xslt/merger.xsl" tofile="${application.startdir}/build.xml">
      <param name="buildfile.source" value="resources/libre-office/libre-office.build.xml"/>
    </xslt>
    <delete file="${buildfile.copy}"/>
  </target>

  <target name="composer" description="Add composer targets &amp; config">
    <!--composer.json config-->
    <composer command="config">
      <arg value="--working-dir"/>
      <arg file="${application.startdir}"/>
      <arg value="platform-check"/>
      <arg value="true"/>
    </composer>
    <composer command="config">
      <arg value="--working-dir"/>
      <arg file="${application.startdir}"/>
      <arg value="preferred-install"/>
      <arg value="dist"/>
    </composer>
    <composer command="config">
      <arg value="--working-dir"/>
      <arg file="${application.startdir}"/>
      <arg value="sort-packages"/>
      <arg value="true"/>
    </composer>
    <!--Install dependencies-->
    <composer command="require">
      <arg value="--working-dir"/>
      <arg file="${application.startdir}"/>
      <arg value="--no-interaction"/>
      <arg value="--no-progress"/>
      <arg value="--ansi"/>
      <arg value="ergebnis/composer-normalize"/>
      <arg value="--dev"/>
    </composer>
    <!--Update buildfile-->
    <tempfile property="buildfile.copy"/>
    <copy file="${application.startdir}/build.xml" tofile="${buildfile.copy}"/>
    <xslt file="${buildfile.copy}" style="resources/xslt/merger.xsl" tofile="${application.startdir}/build.xml">
      <param name="buildfile.source" value="resources/composer.build.xml"/>
    </xslt>
    <delete file="${buildfile.copy}"/>
  </target>


  <target name="php-cs-fixer" description="Install PHP Coding Standards Fixer">
    <!--Copy config file-->
    <copy file="resources/php-cs-fixer/.php-cs-fixer.dist.php" todir="${application.startdir}" overwrite="${force}"/>
    <!--Update .gitignore-->
    <echo append="true" file="${application.startdir}/.gitignore" message="/.php-cs-fixer.php${line.separator}"/>
    <echo append="true" file="${application.startdir}/.gitignore" message="/.php-cs-fixer.cache${line.separator}"/>
    <!--Install dependencies-->
    <composer command="require">
      <arg value="--working-dir"/>
      <arg file="${application.startdir}"/>
      <arg line="--no-interaction --no-progress --ansi"/>
      <arg value="friendsofphp/php-cs-fixer"/>
      <arg value="--dev"/>
    </composer>
    <!--Add target-->
    <tempfile property="buildfile.copy"/>
    <copy file="${application.startdir}/build.xml" tofile="${buildfile.copy}"/>
    <xslt file="${buildfile.copy}" style="resources/xslt/merger.xsl" tofile="${application.startdir}/build.xml">
      <param name="buildfile.source" value="resources/php-cs-fixer/php-cs-fixer.build.xml"/>
    </xslt>
    <delete file="${buildfile.copy}"/>
  </target>
</project>
